version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6.5
    
    working_directory: ~/repo
    
    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          - v1-dependencies-

      - run:
          name: Install dotnet
          command: |
                    curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
                    sudo mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg
                    sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-trusty-prod trusty main" > /etc/apt/sources.list.d/dotnetdev.list'
                    sudo apt-get update
                    sudo apt-get install dotnet-sdk-2.0.2

      - run:
          name: dotnet restore
          command: |
                    dotnet restore

      - run:
          name: Install pandoc
          command: |
                    apt-get update 
                    wget https://github.com/jgm/pandoc/releases/download/2.1.3/pandoc-2.1.3-1-amd64.deb
                    dpkg -i pandoc-2.1.3-1-amd64.deb
          
      - run:
          name: Install tex
          command: |
                    apt-get install -y texlive
                    apt-get install -y texlive-latex-extra
          
      - run:
          name: Install 7z, unrar
          command: |
                    apt-get install -y p7zip-full
          
      - run:
          name: Install InkScape
          command: |
                    apt-get install -y inkscape
          
      - run:
          name: Install graphviz
          command: |
                    apt-get install -y graphviz
          
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            pip install git+https://github.com/sdpython/sphinxcontrib-images.git --upgrade --no-deps
            pip install scipy scikit-learn

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
        
      - run:
          name: build extension
          env:
            DOTNET_CLI_TELEMETRY_OPTOUT:1
          command: |
            . venv/bin/activate
            python setup.py build_ext --inplace

      - run:
          name: run tests                  
          env:
            DOTNET_CLI_TELEMETRY_OPTOUT:1
          command: |
            . venv/bin/activate
            python setup.py unittests

      - run:
          name: wheel
          env:
            DOTNET_CLI_TELEMETRY_OPTOUT:1
          command: |
            . venv/bin/activate
            python setup.py bdist_wheel
            mkdir -p test-reports/dist
            cp dist/*.whl test-reports/dist

      - run:
          name: documentation
          command: |
            . venv/bin/activate
            python setup.py build_sphinx
            
      - run:
          name: copy documentation
          command: |
            mkdir -p test-reports/doc
            cp -r  _doc/sphinxdoc/build/html test-reports/doc
            
      - store_artifacts:
          path: test-reports
          destination: test-reports